// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eveDirect.Databases.Contexts;
using eveDirect.Databases.Contexts.Public.Models;
using eveDirect.Shared.EsiConnector.Models;

namespace eveDirect.Databases.Contexts.Migrations
{
    [DbContext(typeof(PublicContext))]
    [Migration("20200908193321_u18")]
    partial class u18
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<ulong>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("iaccroleclaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<ulong>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("iaccuserclaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<ulong>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("iaccuserlogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<ulong>", b =>
                {
                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("iaccusertokens");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.Account", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<byte>("status")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("сreated")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("iaccounts");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.AccountRole", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("can_remove")
                        .HasColumnType("boolean");

                    b.Property<string>("caption")
                        .HasColumnType("text");

                    b.Property<bool>("character_accounting")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_assets")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_calendar")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_contacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_fleet")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_fwars")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_history")
                        .HasColumnType("boolean");

                    b.Property<int>("character_id")
                        .HasColumnType("integer");

                    b.Property<bool>("character_info")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_killmails")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_mail")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_manufacture")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_owner")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_roles")
                        .HasColumnType("boolean");

                    b.Property<bool>("character_settings")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_accounting")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_assets")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_calendar")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_contacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_fleet")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_fwars")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_history")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_info")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_killmails")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_mail")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_manufacture")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_roles")
                        .HasColumnType("boolean");

                    b.Property<bool>("corpMembers_settings")
                        .HasColumnType("boolean");

                    b.Property<bool>("corporation_accounting")
                        .HasColumnType("boolean");

                    b.Property<bool>("corporation_assets")
                        .HasColumnType("boolean");

                    b.Property<bool>("corporation_ceo")
                        .HasColumnType("boolean");

                    b.Property<bool>("corporation_contacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("corporation_fwars")
                        .HasColumnType("boolean");

                    b.Property<int>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<bool>("corporation_killmails")
                        .HasColumnType("boolean");

                    b.Property<bool>("corporation_manufacture")
                        .HasColumnType("boolean");

                    b.Property<bool>("corporation_members")
                        .HasColumnType("boolean");

                    b.Property<bool>("corporation_privateInfo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("expire")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("iaccroles");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.AccountRoleRef", b =>
                {
                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("assign")
                        .HasColumnType("date");

                    b.Property<decimal>("id")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("iaccrolesrefs");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveDirectCheckPoint", b =>
                {
                    b.Property<string>("checkpointName")
                        .HasColumnType("text");

                    b.Property<int>("value")
                        .HasColumnType("integer");

                    b.HasKey("checkpointName");

                    b.ToTable("ed_checkpoints");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveDirectLastAction", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("auth")
                        .HasColumnType("boolean");

                    b.Property<int>("owner_id")
                        .HasColumnType("integer");

                    b.Property<int>("parent_id")
                        .HasColumnType("integer");

                    b.Property<long>("ref_id")
                        .HasColumnType("bigint");

                    b.Property<byte>("type")
                        .HasColumnType("smallint");

                    b.HasKey("id");

                    b.HasIndex("owner_id");

                    b.HasIndex("parent_id");

                    b.HasIndex("type");

                    b.ToTable("last_actions");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineAlliance", b =>
                {
                    b.Property<int>("alliance_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<int>("corps_count")
                        .HasColumnType("integer");

                    b.Property<int>("creator_corporation_id")
                        .HasColumnType("integer");

                    b.Property<int>("creator_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("date_founded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("executor_corporation_id")
                        .HasColumnType("integer");

                    b.Property<int>("faction_id")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<EveOnlineAlliancePreview>("preview")
                        .HasColumnName("pr")
                        .HasColumnType("jsonb");

                    b.Property<string>("ticker")
                        .HasColumnType("text");

                    b.HasKey("alliance_id");

                    b.ToTable("alliances");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineCharacter", b =>
                {
                    b.Property<int>("character_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<int>("ancestry_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("bloodline_id")
                        .HasColumnType("integer");

                    b.Property<int>("corpHistoryCount")
                        .HasColumnName("cmc")
                        .HasColumnType("integer");

                    b.Property<int>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<int>("faction_id")
                        .HasColumnType("integer");

                    b.Property<byte>("gender")
                        .HasColumnType("smallint");

                    b.Property<ICollection<int>>("killmails")
                        .HasColumnName("kma")
                        .HasColumnType("jsonb");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<EveOnlineCharacterPreview>("preview")
                        .HasColumnName("pr")
                        .HasColumnType("jsonb");

                    b.Property<int>("race_id")
                        .HasColumnType("integer");

                    b.Property<float>("security_status")
                        .HasColumnType("real");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("character_id");

                    b.ToTable("chars");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineCharacterCorpHistory", b =>
                {
                    b.Property<int>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<int>("character_id")
                        .HasColumnType("integer");

                    b.Property<int>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("instat")
                        .HasColumnType("boolean");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("just_newborn")
                        .HasColumnName("nb")
                        .HasColumnType("boolean");

                    b.Property<int>("next_ally_id")
                        .HasColumnType("integer");

                    b.Property<int>("next_corp_id")
                        .HasColumnType("integer");

                    b.Property<int>("prev_ally_id")
                        .HasColumnType("integer");

                    b.Property<int>("prev_corp_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("record_id");

                    b.HasIndex("alliance_id");

                    b.HasIndex("character_id");

                    b.HasIndex("corporation_id");

                    b.HasIndex("just_newborn");

                    b.HasIndex("prev_ally_id");

                    b.HasIndex("prev_corp_id");

                    b.ToTable("charshistory");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineCharacterPortrait", b =>
                {
                    b.Property<int>("character_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("character_id");

                    b.ToTable("chars_portraits");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineContract", b =>
                {
                    b.Property<int>("contract_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("actual")
                        .HasColumnType("boolean");

                    b.Property<double>("buyout")
                        .HasColumnType("double precision");

                    b.Property<double>("collateral")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("date_expired")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("date_issued")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("days_to_complete")
                        .HasColumnType("integer");

                    b.Property<int>("duration_days")
                        .HasColumnType("integer");

                    b.Property<long>("end_location_id")
                        .HasColumnType("bigint");

                    b.Property<bool>("for_corporation")
                        .HasColumnType("boolean");

                    b.Property<int>("issuer_corporation_id")
                        .HasColumnType("integer");

                    b.Property<int>("issuer_id")
                        .HasColumnType("integer");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<int>("region_id")
                        .HasColumnType("integer");

                    b.Property<double>("reward")
                        .HasColumnType("double precision");

                    b.Property<long>("start_location_id")
                        .HasColumnType("bigint");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.Property<byte>("type")
                        .HasColumnType("smallint");

                    b.Property<double>("volume")
                        .HasColumnType("double precision");

                    b.HasKey("contract_id");

                    b.ToTable("contrs");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineContractBid", b =>
                {
                    b.Property<int>("bid_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("amount")
                        .HasColumnType("real");

                    b.Property<int>("contract_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("date_bid")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("isDisable")
                        .HasColumnType("boolean");

                    b.HasKey("bid_id");

                    b.HasIndex("contract_id");

                    b.ToTable("contrsbids");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineContractItem", b =>
                {
                    b.Property<long>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("contract_id")
                        .HasColumnType("integer");

                    b.Property<bool>("is_blueprint_copy")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_included")
                        .HasColumnType("boolean");

                    b.Property<long>("item_id")
                        .HasColumnType("bigint");

                    b.Property<int>("material_efficiency")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("runs")
                        .HasColumnType("integer");

                    b.Property<int>("time_efficiency")
                        .HasColumnType("integer");

                    b.Property<int>("type_id")
                        .HasColumnType("integer");

                    b.HasKey("record_id");

                    b.HasIndex("contract_id");

                    b.ToTable("contrsitems");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineCorporation", b =>
                {
                    b.Property<int>("corporation_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<int>("ceo_id")
                        .HasColumnType("integer");

                    b.Property<int>("creator_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("date_founded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<int>("faction_id")
                        .HasColumnType("integer");

                    b.Property<int>("home_station_id")
                        .HasColumnType("integer");

                    b.Property<int>("member_count")
                        .HasColumnType("integer");

                    b.Property<List<int>>("membersMigrations")
                        .HasColumnName("chmigr")
                        .HasColumnType("jsonb");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<bool>("ncp")
                        .HasColumnType("boolean");

                    b.Property<EveOnlineCorporationPreview>("preview")
                        .HasColumnName("pr")
                        .HasColumnType("jsonb");

                    b.Property<long>("shares")
                        .HasColumnType("bigint");

                    b.Property<float>("tax_rate")
                        .HasColumnType("real");

                    b.Property<string>("ticker")
                        .HasColumnType("text");

                    b.Property<string>("url")
                        .HasColumnType("text");

                    b.Property<bool>("war_eligible")
                        .HasColumnType("boolean");

                    b.HasKey("corporation_id");

                    b.ToTable("corps");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineCorporationAllianceHistory", b =>
                {
                    b.Property<int>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<int>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("instat")
                        .HasColumnType("boolean");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("next_ally_id")
                        .HasColumnType("integer");

                    b.Property<int>("prev_ally_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("record_id");

                    b.HasIndex("alliance_id");

                    b.HasIndex("corporation_id");

                    b.ToTable("corpshistory");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineCorporationLoaltyOffer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("corpsloaltyoffers");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineIndustryFacility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("indac");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineIndustrySystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("indsys");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillMail", b =>
                {
                    b.Property<int>("killmail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("fitting")
                        .HasColumnType("double precision");

                    b.Property<string>("killmail_hash")
                        .HasColumnType("text");

                    b.Property<DateTime?>("killmail_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("moon_id")
                        .HasColumnType("integer");

                    b.Property<EveOnlineKillmailPreview>("preview")
                        .HasColumnType("jsonb");

                    b.Property<int?>("solar_system_id")
                        .HasColumnType("integer");

                    b.Property<double>("total_destroyed")
                        .HasColumnType("double precision");

                    b.Property<double>("total_dropped")
                        .HasColumnType("double precision");

                    b.Property<int?>("war_id")
                        .HasColumnType("integer");

                    b.HasKey("killmail_id");

                    b.ToTable("kms");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillmailActioner", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<int?>("character_id")
                        .HasColumnType("integer");

                    b.Property<int?>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<byte>("d")
                        .HasColumnType("smallint");

                    b.Property<int?>("faction_id")
                        .HasColumnType("integer");

                    b.Property<int>("killmailId")
                        .HasColumnType("integer");

                    b.Property<int>("ship_type_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("alliance_id");

                    b.HasIndex("character_id");

                    b.HasIndex("corporation_id");

                    b.HasIndex("d");

                    b.ToTable("kmsa");

                    b.HasDiscriminator<byte>("d").HasValue((byte)3);
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineMarketGroup", b =>
                {
                    b.Property<int>("market_group_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<List<int>>("childs")
                        .HasColumnType("jsonb");

                    b.Property<string>("dedescription")
                        .HasColumnType("text");

                    b.Property<string>("dename")
                        .HasColumnType("text");

                    b.Property<string>("endescription")
                        .HasColumnType("text");

                    b.Property<string>("enname")
                        .HasColumnType("text");

                    b.Property<string>("frdescription")
                        .HasColumnType("text");

                    b.Property<string>("frname")
                        .HasColumnType("text");

                    b.Property<string>("jadescription")
                        .HasColumnType("text");

                    b.Property<string>("janame")
                        .HasColumnType("text");

                    b.Property<string>("kodescription")
                        .HasColumnType("text");

                    b.Property<string>("koname")
                        .HasColumnType("text");

                    b.Property<int>("parent_group_id")
                        .HasColumnType("integer");

                    b.Property<string>("rudescription")
                        .HasColumnType("text");

                    b.Property<string>("runame")
                        .HasColumnType("text");

                    b.Property<List<int>>("types")
                        .HasColumnType("jsonb");

                    b.Property<string>("zhdescription")
                        .HasColumnType("text");

                    b.Property<string>("zhname")
                        .HasColumnType("text");

                    b.HasKey("market_group_id");

                    b.ToTable("mgs");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineMarketOrder", b =>
                {
                    b.Property<long>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("duration")
                        .HasColumnType("integer");

                    b.Property<bool>("isDisable")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_buy_order")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("issued")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("location_id")
                        .HasColumnType("bigint");

                    b.Property<int>("min_volume")
                        .HasColumnType("integer");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<byte>("range")
                        .HasColumnType("smallint");

                    b.Property<int>("region_id")
                        .HasColumnType("integer");

                    b.Property<int>("system_id")
                        .HasColumnType("integer");

                    b.Property<int>("type_id")
                        .HasColumnType("integer");

                    b.Property<int>("volume_remain")
                        .HasColumnType("integer");

                    b.Property<int>("volume_total")
                        .HasColumnType("integer");

                    b.HasKey("order_id");

                    b.ToTable("mo");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineMarketRegionHistoryPriceInfo", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("average")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("date")
                        .HasColumnType("date");

                    b.Property<double>("highest")
                        .HasColumnType("double precision");

                    b.Property<double>("lowest")
                        .HasColumnType("double precision");

                    b.Property<long>("order_count")
                        .HasColumnType("bigint");

                    b.Property<int>("region_id")
                        .HasColumnType("integer");

                    b.Property<int>("type_id")
                        .HasColumnType("integer");

                    b.Property<long>("volume")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("region_id");

                    b.HasIndex("type_id");

                    b.ToTable("mhps");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineOpportunityGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("ogs");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineOpportunityTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("ots");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseAncestry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("bloodline_id")
                        .HasColumnType("integer");

                    b.Property<string>("dedescription")
                        .HasColumnType("text");

                    b.Property<string>("dename")
                        .HasColumnType("text");

                    b.Property<string>("deshort_description")
                        .HasColumnType("text");

                    b.Property<string>("endescription")
                        .HasColumnType("text");

                    b.Property<string>("enname")
                        .HasColumnType("text");

                    b.Property<string>("enshort_description")
                        .HasColumnType("text");

                    b.Property<string>("frdescription")
                        .HasColumnType("text");

                    b.Property<string>("frname")
                        .HasColumnType("text");

                    b.Property<string>("frshort_description")
                        .HasColumnType("text");

                    b.Property<int>("icon_id")
                        .HasColumnType("integer");

                    b.Property<string>("jadescription")
                        .HasColumnType("text");

                    b.Property<string>("janame")
                        .HasColumnType("text");

                    b.Property<string>("jashort_description")
                        .HasColumnType("text");

                    b.Property<string>("kodescription")
                        .HasColumnType("text");

                    b.Property<string>("koname")
                        .HasColumnType("text");

                    b.Property<string>("koshort_description")
                        .HasColumnType("text");

                    b.Property<string>("rudescription")
                        .HasColumnType("text");

                    b.Property<string>("runame")
                        .HasColumnType("text");

                    b.Property<string>("rushort_description")
                        .HasColumnType("text");

                    b.Property<string>("zhdescription")
                        .HasColumnType("text");

                    b.Property<string>("zhname")
                        .HasColumnType("text");

                    b.Property<string>("zhshort_description")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("uancestries");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseBloodLine", b =>
                {
                    b.Property<int>("bloodline_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("charisma")
                        .HasColumnType("integer");

                    b.Property<int>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<string>("dedescription")
                        .HasColumnType("text");

                    b.Property<string>("dename")
                        .HasColumnType("text");

                    b.Property<string>("endescription")
                        .HasColumnType("text");

                    b.Property<string>("enname")
                        .HasColumnType("text");

                    b.Property<string>("frdescription")
                        .HasColumnType("text");

                    b.Property<string>("frname")
                        .HasColumnType("text");

                    b.Property<int>("intelligence")
                        .HasColumnType("integer");

                    b.Property<string>("jadescription")
                        .HasColumnType("text");

                    b.Property<string>("janame")
                        .HasColumnType("text");

                    b.Property<string>("kodescription")
                        .HasColumnType("text");

                    b.Property<string>("koname")
                        .HasColumnType("text");

                    b.Property<int>("memory")
                        .HasColumnType("integer");

                    b.Property<int>("perception")
                        .HasColumnType("integer");

                    b.Property<int>("race_id")
                        .HasColumnType("integer");

                    b.Property<string>("rudescription")
                        .HasColumnType("text");

                    b.Property<string>("runame")
                        .HasColumnType("text");

                    b.Property<int>("ship_type_id")
                        .HasColumnType("integer");

                    b.Property<int>("willpower")
                        .HasColumnType("integer");

                    b.Property<string>("zhdescription")
                        .HasColumnType("text");

                    b.Property<string>("zhname")
                        .HasColumnType("text");

                    b.HasKey("bloodline_id");

                    b.ToTable("ubloodLines");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseCategory", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dename")
                        .HasColumnType("text");

                    b.Property<string>("enname")
                        .HasColumnType("text");

                    b.Property<string>("frname")
                        .HasColumnType("text");

                    b.Property<List<int>>("groups")
                        .HasColumnType("integer[]");

                    b.Property<string>("janame")
                        .HasColumnType("text");

                    b.Property<string>("koname")
                        .HasColumnType("text");

                    b.Property<bool>("published")
                        .HasColumnType("boolean");

                    b.Property<string>("runame")
                        .HasColumnType("text");

                    b.Property<string>("zhname")
                        .HasColumnType("text");

                    b.HasKey("category_id");

                    b.ToTable("ucategories");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseFaction", b =>
                {
                    b.Property<int>("faction_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<string>("dedescription")
                        .HasColumnType("text");

                    b.Property<string>("dename")
                        .HasColumnType("text");

                    b.Property<string>("endescription")
                        .HasColumnType("text");

                    b.Property<string>("enname")
                        .HasColumnType("text");

                    b.Property<string>("frdescription")
                        .HasColumnType("text");

                    b.Property<string>("frname")
                        .HasColumnType("text");

                    b.Property<bool>("is_unique")
                        .HasColumnType("boolean");

                    b.Property<string>("jadescription")
                        .HasColumnType("text");

                    b.Property<string>("janame")
                        .HasColumnType("text");

                    b.Property<string>("kodescription")
                        .HasColumnType("text");

                    b.Property<string>("koname")
                        .HasColumnType("text");

                    b.Property<int>("militia_corporation_id")
                        .HasColumnType("integer");

                    b.Property<string>("rudescription")
                        .HasColumnType("text");

                    b.Property<string>("runame")
                        .HasColumnType("text");

                    b.Property<float>("size_factor")
                        .HasColumnType("real");

                    b.Property<int>("solar_system_id")
                        .HasColumnType("integer");

                    b.Property<int>("station_count")
                        .HasColumnType("integer");

                    b.Property<int>("station_system_count")
                        .HasColumnType("integer");

                    b.Property<string>("zhdescription")
                        .HasColumnType("text");

                    b.Property<string>("zhname")
                        .HasColumnType("text");

                    b.HasKey("faction_id");

                    b.ToTable("ufactions");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseGraphic", b =>
                {
                    b.Property<int>("graphic_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("collision_file")
                        .HasColumnType("text");

                    b.Property<string>("graphic_file")
                        .HasColumnType("text");

                    b.Property<string>("icon_folder")
                        .HasColumnType("text");

                    b.Property<string>("sof_dna")
                        .HasColumnType("text");

                    b.Property<string>("sof_fation_name")
                        .HasColumnType("text");

                    b.Property<string>("sof_hull_name")
                        .HasColumnType("text");

                    b.Property<string>("sof_race_name")
                        .HasColumnType("text");

                    b.HasKey("graphic_id");

                    b.ToTable("ugraphics");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseGroup", b =>
                {
                    b.Property<int>("group_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("category_id")
                        .HasColumnType("integer");

                    b.Property<string>("dename")
                        .HasColumnType("text");

                    b.Property<string>("enname")
                        .HasColumnType("text");

                    b.Property<string>("frname")
                        .HasColumnType("text");

                    b.Property<string>("janame")
                        .HasColumnType("text");

                    b.Property<string>("koname")
                        .HasColumnType("text");

                    b.Property<bool>("published")
                        .HasColumnType("boolean");

                    b.Property<string>("runame")
                        .HasColumnType("text");

                    b.Property<List<int>>("types")
                        .HasColumnType("jsonb");

                    b.Property<string>("zhname")
                        .HasColumnType("text");

                    b.HasKey("group_id");

                    b.ToTable("ugroups");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseLocation", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<UniverseAsteroidBeltInfoResult>("asteroidBeltInfo")
                        .HasColumnType("jsonb");

                    b.Property<UniverseConstellationInfoResult>("constellationInfo")
                        .HasColumnType("jsonb");

                    b.Property<long?>("constellation_id")
                        .HasColumnType("bigint");

                    b.Property<UniverseMoonInfoResult>("moonInfo")
                        .HasColumnType("jsonb");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int?>("owner_id")
                        .HasColumnType("integer");

                    b.Property<long>("parent_id")
                        .HasColumnType("bigint");

                    b.Property<UniversePlanetInfoResult>("planetInfo")
                        .HasColumnType("jsonb");

                    b.Property<long?>("planet_id")
                        .HasColumnType("bigint");

                    b.Property<UniverseRegionInfoResult>("regionInfo")
                        .HasColumnType("jsonb");

                    b.Property<long?>("region_id")
                        .HasColumnType("bigint");

                    b.Property<double?>("security_status")
                        .HasColumnType("double precision");

                    b.Property<UniverseStarInfoResult>("starInfo")
                        .HasColumnType("jsonb");

                    b.Property<UniverseStargateInfoResult>("stargateInfo")
                        .HasColumnType("jsonb");

                    b.Property<UniverseStationInfoResult>("stationInfo")
                        .HasColumnType("jsonb");

                    b.Property<CorporationStructuresResult.CorporationStructuresItem>("structureInfo")
                        .HasColumnType("jsonb");

                    b.Property<UniverseSystemInfoResult>("systemInfo")
                        .HasColumnType("jsonb");

                    b.Property<long?>("system_id")
                        .HasColumnType("bigint");

                    b.Property<byte>("type")
                        .HasColumnType("smallint");

                    b.Property<int?>("type_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("owner_id");

                    b.HasIndex("type");

                    b.ToTable("ulocs");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseRace", b =>
                {
                    b.Property<int>("race_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<string>("dedescription")
                        .HasColumnType("text");

                    b.Property<string>("dename")
                        .HasColumnType("text");

                    b.Property<string>("endescription")
                        .HasColumnType("text");

                    b.Property<string>("enname")
                        .HasColumnType("text");

                    b.Property<string>("frdescription")
                        .HasColumnType("text");

                    b.Property<string>("frname")
                        .HasColumnType("text");

                    b.Property<string>("jadescription")
                        .HasColumnType("text");

                    b.Property<string>("janame")
                        .HasColumnType("text");

                    b.Property<string>("kodescription")
                        .HasColumnType("text");

                    b.Property<string>("koname")
                        .HasColumnType("text");

                    b.Property<string>("rudescription")
                        .HasColumnType("text");

                    b.Property<string>("runame")
                        .HasColumnType("text");

                    b.Property<string>("zhdescription")
                        .HasColumnType("text");

                    b.Property<string>("zhname")
                        .HasColumnType("text");

                    b.HasKey("race_id");

                    b.ToTable("uraces");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseType", b =>
                {
                    b.Property<int>("type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("capacity")
                        .HasColumnType("real");

                    b.Property<string>("dedescription")
                        .HasColumnType("text");

                    b.Property<string>("dename")
                        .HasColumnType("text");

                    b.Property<List<DogmaAttribute>>("dogma_attributes")
                        .HasColumnType("jsonb");

                    b.Property<List<DogmaEffect>>("dogma_effects")
                        .HasColumnType("jsonb");

                    b.Property<string>("endescription")
                        .HasColumnType("text");

                    b.Property<string>("enname")
                        .HasColumnType("text");

                    b.Property<string>("frdescription")
                        .HasColumnType("text");

                    b.Property<string>("frname")
                        .HasColumnType("text");

                    b.Property<int?>("graphic_id")
                        .HasColumnType("integer");

                    b.Property<int>("group_id")
                        .HasColumnType("integer");

                    b.Property<int?>("icon_id")
                        .HasColumnType("integer");

                    b.Property<List<string>>("img_tags")
                        .HasColumnType("jsonb");

                    b.Property<string>("jadescription")
                        .HasColumnType("text");

                    b.Property<string>("janame")
                        .HasColumnType("text");

                    b.Property<string>("kodescription")
                        .HasColumnType("text");

                    b.Property<string>("koname")
                        .HasColumnType("text");

                    b.Property<int?>("market_group_id")
                        .HasColumnType("integer");

                    b.Property<float>("mass")
                        .HasColumnType("real");

                    b.Property<float>("packaged_volume")
                        .HasColumnType("real");

                    b.Property<int?>("portion_size")
                        .HasColumnType("integer");

                    b.Property<bool>("published")
                        .HasColumnType("boolean");

                    b.Property<float>("radius")
                        .HasColumnType("real");

                    b.Property<string>("rudescription")
                        .HasColumnType("text");

                    b.Property<string>("runame")
                        .HasColumnType("text");

                    b.Property<float>("volume")
                        .HasColumnType("real");

                    b.Property<string>("zhdescription")
                        .HasColumnType("text");

                    b.Property<string>("zhname")
                        .HasColumnType("text");

                    b.HasKey("type_id");

                    b.ToTable("utypes");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineWar", b =>
                {
                    b.Property<int>("war_id")
                        .HasColumnType("integer");

                    b.Property<int?>("aggressor_alliance_id")
                        .HasColumnType("integer");

                    b.Property<int?>("aggressor_corporation_id")
                        .HasColumnType("integer");

                    b.Property<float>("aggressor_isk_destroyed")
                        .HasColumnType("real");

                    b.Property<int>("aggressor_ships_killed")
                        .HasColumnType("integer");

                    b.Property<DateTime>("declared")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("defender_alliance_id")
                        .HasColumnType("integer");

                    b.Property<int?>("defender_corporation_id")
                        .HasColumnType("integer");

                    b.Property<float>("defender_isk_destroyed")
                        .HasColumnType("real");

                    b.Property<int>("defender_ships_killed")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("finished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("killmail_loaded")
                        .HasColumnType("boolean");

                    b.Property<bool>("mutual")
                        .HasColumnType("boolean");

                    b.Property<bool>("open_for_allies")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("retracted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("started")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("war_id");

                    b.ToTable("wars");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineWarAlly", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<int?>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("excluded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("warId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("warId");

                    b.ToTable("warsa");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.IdentityConnectionStringToDb", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("AccountId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ConnectionStr")
                        .HasColumnType("text");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("owner_id")
                        .HasColumnType("integer");

                    b.Property<byte>("owner_type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("iconstrs");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.IdentitySso", b =>
                {
                    b.Property<decimal>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("access_token")
                        .HasColumnType("text");

                    b.Property<decimal>("accountId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("added")
                        .HasColumnType("date");

                    b.Property<int>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<int>("character_id")
                        .HasColumnType("integer");

                    b.Property<string>("character_name")
                        .HasColumnType("text");

                    b.Property<string>("character_owner_hash")
                        .HasColumnType("text");

                    b.Property<int>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<string>("corporation_name")
                        .HasColumnType("text");

                    b.Property<DateTime>("expire")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("is_ceo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("last_owner_and_status_update")
                        .HasColumnType("date");

                    b.Property<string>("pipe_request")
                        .HasColumnType("text");

                    b.Property<string>("refresh_token")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<List<string>>("token_scopes")
                        .HasColumnType("jsonb");

                    b.HasKey("id");

                    b.HasIndex("accountId");

                    b.ToTable("issos");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.IdentitySsoRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("db_changes")
                        .HasColumnType("integer");

                    b.Property<DateTime>("dt")
                        .HasColumnType("date");

                    b.Property<int>("owner_id")
                        .HasColumnType("integer");

                    b.Property<int>("sso_Records_updates")
                        .HasColumnType("integer");

                    b.Property<byte>("type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("issorequests");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.LoginHistoryEntry", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Ip")
                        .HasColumnType("text");

                    b.Property<bool>("IsSuccessed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("accountId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("accountId");

                    b.ToTable("iaccloginhist");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.SearchItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("item_id")
                        .HasColumnType("bigint");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.Property<byte>("type")
                        .HasColumnType("smallint");

                    b.HasKey("id");

                    b.HasIndex("title");

                    b.HasIndex("type");

                    b.ToTable("ed_search");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.StatisticAllianceCharacterMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("_in")
                        .HasColumnName("in")
                        .HasColumnType("integer");

                    b.Property<int>("_out")
                        .HasColumnName("out")
                        .HasColumnType("integer");

                    b.Property<int>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<int>("count")
                        .HasColumnType("integer");

                    b.Property<DateTime>("date")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.HasIndex("alliance_id");

                    b.HasIndex("date");

                    b.ToTable("statallymems");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.StatisticAllianceCorporationMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("_in")
                        .HasColumnName("in")
                        .HasColumnType("integer");

                    b.Property<int>("_out")
                        .HasColumnName("out")
                        .HasColumnType("integer");

                    b.Property<int>("alliance_id")
                        .HasColumnType("integer");

                    b.Property<int>("count")
                        .HasColumnType("integer");

                    b.Property<DateTime>("date")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.HasIndex("alliance_id");

                    b.HasIndex("date");

                    b.ToTable("statallycorps");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.StatisticCorporationCharacterMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("_in")
                        .HasColumnType("integer");

                    b.Property<int>("_out")
                        .HasColumnType("integer");

                    b.Property<int>("corporation_id")
                        .HasColumnType("integer");

                    b.Property<int>("count")
                        .HasColumnType("integer");

                    b.Property<DateTime>("date")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.HasIndex("corporation_id");

                    b.HasIndex("date");

                    b.ToTable("statcorpmems");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.ZKillBoardStatItem", b =>
                {
                    b.Property<string>("OnDate")
                        .HasColumnType("text");

                    b.Property<int>("zKillBoard_Count")
                        .HasColumnType("integer");

                    b.HasKey("OnDate");

                    b.ToTable("kmsz");
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillMailAttacker", b =>
                {
                    b.HasBaseType("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillmailActioner");

                    b.Property<int>("damage_done")
                        .HasColumnType("integer");

                    b.Property<bool>("final_blow")
                        .HasColumnType("boolean");

                    b.Property<float>("security_status")
                        .HasColumnType("real");

                    b.Property<int?>("weapon_type_id")
                        .HasColumnType("integer");

                    b.HasIndex("killmailId");

                    b.HasDiscriminator().HasValue((byte)0);
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillMailVictim", b =>
                {
                    b.HasBaseType("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillmailActioner");

                    b.Property<int>("damage_taken")
                        .HasColumnType("integer");

                    b.Property<List<EveOnlineKillMailVictimItemParent>>("items")
                        .HasColumnType("jsonb");

                    b.Property<long?>("location_id")
                        .HasColumnType("bigint");

                    b.Property<float>("px")
                        .HasColumnType("real");

                    b.Property<float>("py")
                        .HasColumnType("real");

                    b.Property<float>("pz")
                        .HasColumnType("real");

                    b.HasIndex("killmailId")
                        .IsUnique()
                        .HasName("IX_kmsa_killmailId1");

                    b.HasDiscriminator().HasValue((byte)1);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<ulong>", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.AccountRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<ulong>", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<ulong>", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<ulong>", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.AccountRoleRef", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.AccountRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineContractBid", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.EveOnlineContract", "contract")
                        .WithMany("bids")
                        .HasForeignKey("contract_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineContractItem", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.EveOnlineContract", "contract")
                        .WithMany("items")
                        .HasForeignKey("contract_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineUniverseLocation", b =>
                {
                    b.OwnsOne("eveDirect.EsiConnector.Models.Position", "position", b1 =>
                        {
                            b1.Property<long>("EveOnlineUniverseLocationid")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<float>("x")
                                .HasColumnType("real");

                            b1.Property<float>("y")
                                .HasColumnType("real");

                            b1.Property<float>("z")
                                .HasColumnType("real");

                            b1.HasKey("EveOnlineUniverseLocationid");

                            b1.ToTable("ulocs");

                            b1.WithOwner()
                                .HasForeignKey("EveOnlineUniverseLocationid");
                        });
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineWarAlly", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.EveOnlineWar", "war")
                        .WithMany("allies")
                        .HasForeignKey("warId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.IdentityConnectionStringToDb", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.IdentitySso", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.LoginHistoryEntry", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.Account", "account")
                        .WithMany("loginhist")
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillMailAttacker", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillMail", "killmail")
                        .WithMany("attackers")
                        .HasForeignKey("killmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillMailVictim", b =>
                {
                    b.HasOne("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillMail", "killmail")
                        .WithOne("victim")
                        .HasForeignKey("eveDirect.Databases.Contexts.Public.Models.EveOnlineKillMailVictim", "killmailId")
                        .HasConstraintName("FK_kmsa_kms_killmailId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
